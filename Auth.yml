AWSTemplateFormatVersion: 2010-09-09
Transform:
  - AWS::Serverless-2016-10-31
Parameters:
  ENV:
    Type: String
    Description: The environment staging name
    Default: env

Resources:
  # BEGIN: Authentication
  AdminAuthRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: cognito-idp.amazonaws.com
      Policies:
        - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: '*'
                  Resource: '*'
          PolicyName: AdminAuthGroupRole
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # AccountRecoverySetting:
      #   RecoveryMechanisms:
      #     - Name: verified_phone_number
      #       Priority: 1
      # AutoVerifiedAttributes:
      #   - phone_number
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireUppercase: true
          RequireNumbers: true
          RequireSymbols: false
      Schema:
        - Name: gender
          AttributeDataType: String
          Mutable: true
          DeveloperOnlyAttribute: false
          Required: false
        - Name: race
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: birthdate
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: given_name
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: family_name
          AttributeDataType: String
          Mutable: true
          Required: false
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: false
        - Name: locale
          AttributeDataType: String
          Required: false
          Mutable: true
      LambdaConfig:
        PostConfirmation:
          Fn::ImportValue: !Sub "gratitude:${AWS::Region}:${ENV}:cognitoInsertTrigger:Arn"
      # SmsConfiguration:
      #   ExternalId: PNVerifier
      #   SnsCallerArn: !GetAtt SmsRole.Arn #verify this is correct
  GratitudeClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 180
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - openid
        - aws.cognito.signin.user.admin
        - email
      CallbackURLs:
        - gratitude://home
        - gratitude://signin
      ClientName: gratitude
      DefaultRedirectURI: gratitude://home
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
      IdTokenValidity: 180
      LogoutURLs:
        - gratitude://logout
      PreventUserExistenceErrors: LEGACY
      ReadAttributes:
        - race
        - birthdate
        - family_name
        - given_name
        - gender
        - username
        - zoneinfo
        - nickname
        - phone_number
        - locale
      WriteAttributes:
        - birthdate
        - email
        - family_name
        - given_name
        - nickname
        - phone_number
        - zoneinfo
        - race
        - locale
        - gender
      RefreshTokenValidity: 365
      SupportedIdentityProviders:
        - COGNITO
        - Facebook
        - Google
      TokenValidityUnits:
        AccessToken: days
        IdToken: days
        RefreshToken: days
      UserPoolId: !Ref UserPool
  AdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Allowed users to access admin features
      GroupName: Admin
      Precedence: 0
      UserPoolId: !Ref UserPool
      RoleArn: !GetAtt AdminAuthRole.Arn
  StandardGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Allowed users to access usual app features
      GroupName: Standard
      Precedence: 1
      UserPoolId: !Ref UserPool
  SnsSmsTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Phone Number Verifier"
      FifoTopic: false
      TopicName: snsTopic
  # SnsSmsSubscription:
  #   Type: AWS::SNS::Subscription
  #   Properties:
  #     Protocol: sms
  #     TopicArn: !Ref SnsSmsTopic

  SmsRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Iam role to call sns for sms messages
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sms-caller
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - sns:*
                Resource:
                  - '*'
  # END: Authentication

Outputs:
  UserPoolArn:
    Value: !GetAtt UserPool.Arn
    Export:
      Name: !Sub "gratitude:${AWS::Region}:${ENV}:UserPool:Arn"
